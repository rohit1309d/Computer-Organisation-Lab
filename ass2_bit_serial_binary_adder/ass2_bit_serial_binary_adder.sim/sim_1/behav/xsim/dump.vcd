$date
   Fri Sep 18 12:34:52 2020
$end
$version
  2020.1
$end
$timescale
  1ps
$end
$scope module serial_adder_tb $end
$var reg 8 ! data_a [7:0] $end
$var reg 8 " data_b [7:0] $end
$var reg 1 # clk $end
$var reg 1 $ reset $end
$var wire 8 % out [7:0] $end
$var wire 1 & cout $end
$scope module s_adder $end
$var wire 8 ' data_a [7:0] $end
$var wire 8 ( data_b [7:0] $end
$var wire 1 ) clk $end
$var wire 1 * reset $end
$var reg 8 + out [7:0] $end
$var reg 4 , count [3:0] $end
$var reg 1 - enable $end
$var reg 1 . cout $end
$var wire 1 / wire_a $end
$var wire 1 0 wire_b $end
$var wire 1 1 cout_temp $end
$var wire 1 2 cin $end
$var wire 1 3 sum $end
$scope module piso_a $end
$var wire 1 4 enable $end
$var wire 1 ) clk $end
$var wire 1 * rst $end
$var wire 8 ' data [7:0] $end
$var reg 1 5 out $end
$var reg 8 6 memory [7:0] $end
$upscope $end
$scope module piso_b $end
$var wire 1 7 enable $end
$var wire 1 ) clk $end
$var wire 1 * rst $end
$var wire 8 ( data [7:0] $end
$var reg 1 8 out $end
$var reg 8 9 memory [7:0] $end
$upscope $end
$scope module adder $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 2 cin $end
$var wire 1 3 sum $end
$var wire 1 1 cout $end
$upscope $end
$scope module dff $end
$var wire 1 1 d $end
$var wire 1 ) clk $end
$var wire 1 : enable $end
$var wire 1 * reset $end
$var reg 1 ; out $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b100010 !
b1010 "
0#
1$
b0 %
x&
b100010 '
b1010 (
0)
1*
b0 +
b0 ,
1-
x.
0/
00
01
02
03
14
05
b100010 6
17
08
b1010 9
1:
0;
$end
#10000
1#
1)
b0 +
05
08
0;
#20000
0#
0$
0)
0*
#30000
1#
0&
1)
b0 +
b1 ,
0.
05
b10001 6
08
b101 9
0;
#40000
0#
0)
#50000
1#
1)
b0 +
b10 ,
0.
1/
10
11
15
b1000 6
18
b10 9
0;
#60000
0#
0)
#70000
1#
1&
1)
b0 +
b11 ,
1.
0/
00
01
12
13
05
b100 6
08
b1 9
1;
#80000
0#
0)
#90000
1#
b10000000 %
0&
1)
b10000000 +
b100 ,
0.
10
02
05
b10 6
18
b0 9
0;
#100000
0#
0)
#110000
1#
b11000000 %
1)
b11000000 +
b101 ,
0.
00
03
05
b1 6
08
0;
#120000
0#
0)
#130000
1#
b1100000 %
1)
b1100000 +
b110 ,
0.
1/
13
15
b0 6
08
0;
#140000
0#
0)
#150000
1#
b10110000 %
1)
b10110000 +
b111 ,
0.
0/
03
05
08
0;
#160000
0#
0)
#170000
1#
b1011000 %
1)
b1011000 +
b1000 ,
0.
05
08
0;
#180000
0#
0)
#190000
1#
b101100 %
1)
b101100 +
b1001 ,
0.
05
08
0;
#200000
0#
0)
#210000
1#
1)
0-
04
05
07
08
0:
0;
#220000
b10100 !
b10101 "
0#
1$
b0 %
b10100 '
b10101 (
0)
1*
b0 +
b0 ,
1-
14
05
b10100 6
17
08
b10101 9
1:
0;
#230000
1#
1)
b0 +
05
08
0;
#240000
0#
0$
0)
0*
#250000
1#
1)
b0 +
b1 ,
0.
10
13
05
b1010 6
18
b1010 9
0;
#260000
0#
0)
#270000
1#
b10000000 %
1)
b10000000 +
b10 ,
0.
00
03
05
b101 6
08
b101 9
0;
#280000
0#
0)
#290000
1#
b1000000 %
1)
b1000000 +
b11 ,
0.
1/
10
11
15
b10 6
18
b10 9
0;
#300000
0#
0)
#310000
1#
b100000 %
1&
1)
b100000 +
b100 ,
1.
0/
00
01
12
13
05
b1 6
08
b1 9
1;
#320000
0#
0)
#330000
1#
b10010000 %
0&
1)
b10010000 +
b101 ,
0.
1/
10
11
02
03
15
b0 6
18
b0 9
0;
#340000
0#
0)
#350000
1#
b1001000 %
1&
1)
b1001000 +
b110 ,
1.
0/
00
01
12
13
05
08
1;
#360000
0#
0)
#370000
1#
b10100100 %
0&
1)
b10100100 +
b111 ,
0.
02
03
05
08
0;
#380000
0#
0)
#390000
1#
b1010010 %
1)
b1010010 +
b1000 ,
0.
05
08
0;
#400000
0#
0)
#410000
1#
b101001 %
1)
b101001 +
b1001 ,
0.
05
08
0;
#420000
0#
0)
#430000
1#
1)
0-
04
05
07
08
0:
0;
